{"ast":null,"code":"useEffect(() => {\n  // Ambil data pengguna berdasarkan ID\n  axios.get(`http://localhost:5000/users/${id}`).then(response => {\n    setUser(response.data);\n  }).catch(error => {\n    console.error(\"Error fetching user data:\", error);\n  });\n\n  // Ambil semua data pelanggaran\n  axios.get(\"http://localhost:5000/pelanggarans\").then(response => {\n    // Filter pelanggaran berdasarkan ID pengguna\n    const filteredPelanggarans = response.data.filter(pelanggaran => pelanggaran.user === id);\n    setPelanggarans(filteredPelanggarans);\n\n    // Mendapatkan satu data pelanggaran terbaru (misalnya, yang memiliki tanggal terbaru)\n    const latestPelanggaran = filteredPelanggarans.reduce((latest, pelanggaran) => {\n      if (!latest || new Date(pelanggaran.date) > new Date(latest.date)) {\n        return pelanggaran;\n      }\n      return latest;\n    }, null);\n    console.log(\"Data Pelanggaran Terbaru:\", latestPelanggaran);\n  }).catch(error => {\n    console.error(\"Error fetching pelanggaran data:\", error);\n  });\n}, [id]);","map":{"version":3,"names":["useEffect","axios","get","id","then","response","setUser","data","catch","error","console","filteredPelanggarans","filter","pelanggaran","user","setPelanggarans","latestPelanggaran","reduce","latest","Date","date","log"],"sources":["F:/LBI/Project Penilian Asisten/frontend/src/components/AddPelanggaran.js"],"sourcesContent":["useEffect(() => {\r\n  // Ambil data pengguna berdasarkan ID\r\n  axios\r\n    .get(`http://localhost:5000/users/${id}`)\r\n    .then((response) => {\r\n      setUser(response.data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching user data:\", error);\r\n    });\r\n\r\n  // Ambil semua data pelanggaran\r\n  axios\r\n    .get(\"http://localhost:5000/pelanggarans\")\r\n    .then((response) => {\r\n      // Filter pelanggaran berdasarkan ID pengguna\r\n      const filteredPelanggarans = response.data.filter(\r\n        (pelanggaran) => pelanggaran.user === id\r\n      );\r\n      setPelanggarans(filteredPelanggarans);\r\n\r\n      // Mendapatkan satu data pelanggaran terbaru (misalnya, yang memiliki tanggal terbaru)\r\n      const latestPelanggaran = filteredPelanggarans.reduce((latest, pelanggaran) => {\r\n        if (!latest || new Date(pelanggaran.date) > new Date(latest.date)) {\r\n          return pelanggaran;\r\n        }\r\n        return latest;\r\n      }, null);\r\n\r\n      console.log(\"Data Pelanggaran Terbaru:\", latestPelanggaran);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching pelanggaran data:\", error);\r\n    });\r\n}, [id]);\r\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd;EACAC,KAAK,CACFC,GAAG,CAAE,+BAA8BC,EAAG,EAAC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACD,QAAQ,CAACE,IAAI,CAAC;EACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD,CAAC,CAAC;;EAEJ;EACAR,KAAK,CACFC,GAAG,CAAC,oCAAoC,CAAC,CACzCE,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACA,MAAMM,oBAAoB,GAAGN,QAAQ,CAACE,IAAI,CAACK,MAAM,CAC9CC,WAAW,IAAKA,WAAW,CAACC,IAAI,KAAKX,EACxC,CAAC;IACDY,eAAe,CAACJ,oBAAoB,CAAC;;IAErC;IACA,MAAMK,iBAAiB,GAAGL,oBAAoB,CAACM,MAAM,CAAC,CAACC,MAAM,EAAEL,WAAW,KAAK;MAC7E,IAAI,CAACK,MAAM,IAAI,IAAIC,IAAI,CAACN,WAAW,CAACO,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,MAAM,CAACE,IAAI,CAAC,EAAE;QACjE,OAAOP,WAAW;MACpB;MACA,OAAOK,MAAM;IACf,CAAC,EAAE,IAAI,CAAC;IAERR,OAAO,CAACW,GAAG,CAAC,2BAA2B,EAAEL,iBAAiB,CAAC;EAC7D,CAAC,CAAC,CACDR,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;EAC1D,CAAC,CAAC;AACN,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}