{"ast":null,"code":"var _jsxFileName = \"F:\\\\LBI\\\\Project Penilian Asisten\\\\frontend\\\\src\\\\components\\\\AddUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [point, setPoint] = useState('');\n  const [error, setError] = useState('');\n  const [existingData, setExistingData] = useState([]); // State to store existing data\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch existing data from the server\n    const fetchExistingData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/users');\n        setExistingData(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchExistingData();\n  }, []);\n  const saveUser = async e => {\n    e.preventDefault();\n\n    // Check if any of the required fields are empty\n    if (!name || !email || !point) {\n      setError('Please fill in all required fields.');\n      return;\n    }\n\n    // Check if the 'point' is within the range of 0 to 100\n    const pointValue = parseInt(point, 10);\n    if (pointValue < 0 || pointValue > 100) {\n      setError('Point must be between 0 and 100.');\n      return;\n    }\n\n    // Check if the name or email already exist\n    if (existingData.some(user => user.name === name || user.email === email)) {\n      setError('Name or email Sudah Dipakai');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/users', {\n        name,\n        email,\n        point: pointValue\n      });\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: \"Lorem ipsum leo risus, porta ac consectetur ac, vestibulum at eros. Donec id elit non mi porta gravida at eget metus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras mattis consectetur purus sit amet fermentum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUser, \"L9bDXFDkxe83PdVh9XQfkXkJ7KY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","useNavigate","jsxDEV","_jsxDEV","AddUser","_s","name","setName","email","setEmail","point","setPoint","error","setError","existingData","setExistingData","navigate","fetchExistingData","response","get","data","console","log","saveUser","e","preventDefault","pointValue","parseInt","some","user","post","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/LBI/Project Penilian Asisten/frontend/src/components/AddUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst AddUser = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [point, setPoint] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [existingData, setExistingData] = useState([]); // State to store existing data\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch existing data from the server\r\n    const fetchExistingData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/users');\r\n        setExistingData(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchExistingData();\r\n  }, []);\r\n\r\n  const saveUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if any of the required fields are empty\r\n    if (!name || !email || !point) {\r\n      setError('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    // Check if the 'point' is within the range of 0 to 100\r\n    const pointValue = parseInt(point, 10);\r\n    if (pointValue < 0 || pointValue > 100) {\r\n      setError('Point must be between 0 and 100.');\r\n      return;\r\n    }\r\n\r\n    // Check if the name or email already exist\r\n    if (existingData.some(user => user.name === name || user.email === email)) {\r\n      setError('Name or email Sudah Dipakai');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/users', {\r\n        name,\r\n        email,\r\n        point: pointValue,\r\n      });\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div class=\"card\">\r\n  <div class=\"card-content\">\r\n    <div class=\"content\">\r\n      Lorem ipsum leo risus, porta ac consectetur ac, vestibulum at eros. Donec id elit non mi porta gravida at eget metus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Cras mattis consectetur purus sit amet fermentum.\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}