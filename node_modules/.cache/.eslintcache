[{"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\index.js":"1","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\App.js":"2","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\UserList.js":"3","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\AddUser.js":"4","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\footer.js":"5","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\header.js":"6","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\EditUser.js":"7","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\DetailUser.js":"8","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\AddPelanggaran.js":"9"},{"size":351,"mtime":1694770161714,"results":"10","hashOfConfig":"11"},{"size":729,"mtime":1695019957242,"results":"12","hashOfConfig":"11"},{"size":2008,"mtime":1695265473704,"results":"13","hashOfConfig":"11"},{"size":3829,"mtime":1695024717140,"results":"14","hashOfConfig":"11"},{"size":466,"mtime":1695009637503,"results":"15","hashOfConfig":"11"},{"size":88,"mtime":1695009397759,"results":"16","hashOfConfig":"11"},{"size":3349,"mtime":1695012953716,"results":"17","hashOfConfig":"11"},{"size":4707,"mtime":1695279976745,"results":"18","hashOfConfig":"11"},{"size":4031,"mtime":1695278715866,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"m6h1zl",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\index.js",[],[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\App.js",[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\UserList.js",[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\AddUser.js",[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\footer.js",[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\header.js",[],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\EditUser.js",["49"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst EditUser = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [existingData, setExistingData] = useState([]); // State to store existing data\r\n  const navigate = useNavigate();\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    getUserById();\r\n  },[]);\r\n\r\n  const getUserById = async()=>{\r\n    const response = await axios.get(`http://localhost:5000/users/${id}`);\r\n    setName(response.data.name);\r\n    setEmail(response.data.email);\r\n  }\r\n  useEffect(() => {\r\n    // Fetch existing data from the server\r\n    const fetchExistingData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/users\");\r\n        setExistingData(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchExistingData();\r\n  }, []);\r\n\r\n  const saveUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if any of the required fields are empty\r\n    if (!name || !email) {\r\n      setError(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n    // Check if the name or email already exist\r\n    if (\r\n      existingData.some((user) => user.name === name || user.email === email)\r\n    ) {\r\n      setError(\"Name or email Sudah Dipakai\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/users\", {\r\n        name,\r\n        email\r\n      });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div class=\"box\" style={{ width: \"50%\", margin: \"0 auto\", marginTop: \"50px\",paddingBottom:\"70px\" }}>\r\n        <div className=\"columns mt-5 is-centered\">\r\n          <div className=\"column is-half\">\r\n            <form onSubmit={saveUser}>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Name</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Email</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {error && <p className=\"has-text-danger\">{error}</p>}\r\n              <div className=\"field\">\r\n                <button className=\"button is-success\" type=\"submit\">\r\n                  Tambah\r\n                </button>\r\n                <Link to={\"/\"} className=\"button is-normal is-danger ml-2\">\r\n                  Kembali\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\DetailUser.js",["50"],[],"F:\\LBI\\Project Penilian Asisten\\frontend\\src\\components\\AddPelanggaran.js",["51"],[],{"ruleId":"52","severity":1,"message":"53","line":16,"column":5,"nodeType":"54","endLine":16,"endColumn":7,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":17,"column":6,"nodeType":"54","endLine":17,"endColumn":8,"suggestions":"60"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserById'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["62"],{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [getUserById]",{"range":"66","text":"67"},{"range":"68","text":"67"},[504,506],"[getUserById]",[578,580]]